spring.application.name=spring-boot-ssl-client-server
#actuator config
management.endpoints.web.exposure.include=*
management.endpoints.access.default=unrestricted
management.health.livenessstate.enabled=true
management.endpoint.health.probes.enabled=true
management.endpoint.health.show-details=always
management.health.ssl.certificate-validity-warning-threshold=7d
management.health.ssl.enabled=true
management.info.ssl.enabled=true
### server ssl using JKS
spring.ssl.bundle.jks.server.keystore.location=classpath:springbootssl.jks
spring.ssl.bundle.jks.server.keystore.password=secret
spring.ssl.bundle.jks.server.keystore.type=JKS
spring.ssl.bundle.jks.server.key.password=secret
### client ssl using jks
spring.ssl.bundle.jks.client.truststore.location=classpath:springbootssl.jks
spring.ssl.bundle.jks.client.truststore.password=secret
### server ssl using PKCS12
#spring.ssl.bundle.jks.server.key.alias=springbootssl
#spring.ssl.bundle.jks.server.keystore.location=classpath:springbootssl.p12
#spring.ssl.bundle.jks.server.keystore.password=secret
#spring.ssl.bundle.jks.server.keystore.type=PKCS12
### client ssl using PKCS12
#spring.ssl.bundle.jks.client.truststore.location=classpath:springbootssl.p12
#spring.ssl.bundle.jks.client.truststore.password=secret
### server ssl using PEM-encoded Certificates
#spring.ssl.bundle.pem.server.reload-on-update=true
#spring.ssl.bundle.pem.server.keystore.certificate=classpath:certs/certificate.crt
#spring.ssl.bundle.pem.server.keystore.private-key=classpath:certs/private.key
### client ssl using PEM-encoded Certificates
#spring.ssl.bundle.pem.client.truststore.certificate=classpath:certs/certificate.crt
# server config
server.port=8443
server.ssl.client-auth=want
security.headers.hsts=NONE
logging.level.org.apache.hc=trace
server.ssl.bundle=server
